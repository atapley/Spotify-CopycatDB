DROP DATABASE IF EXISTS spotify_copycatDB;
CREATE DATABASE spotify_copycatDB;

USE spotify_copycatDB;

DROP TABLE IF EXISTS SpotifyUser;
CREATE TABLE SpotifyUser (
username   VARCHAR(50) NOT NULL PRIMARY KEY,
pass       VARCHAR(50) NOT NULL,
firstName  VARCHAR(50) NOT NULL,
dateJoined DATE NOT NULL
);

DROP TABLE IF EXISTS Playlist;
CREATE TABLE Playlist (
playlistID   INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
playlistName VARCHAR(50) NOT NULL,
createdBy    VARCHAR(50) NOT NULL,
FOREIGN KEY (createdBy) REFERENCES SpotifyUser(username) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Artist;
CREATE TABLE Artist (
artistName VARCHAR(50) NOT NULL PRIMARY KEY,
mainGenre  VARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS Album;
CREATE TABLE Album (
albumID      INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
title        VARCHAR(50) NOT NULL,
artist       VARCHAR(50) NOT NULL,
dateReleased DATE NOT NULL,
FOREIGN KEY (artist) REFERENCES Artist(artistName) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Song;
CREATE TABLE Song (
songID   INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
title    VARCHAR(50) NOT NULL,
duration INT NOT NULL,
genre    VARCHAR(50) NOT NULL,
artist   VARCHAR(50) NOT NULL,
albumID  INT NOT NULL,
FOREIGN KEY (artist) REFERENCES Artist(artistName) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (albumID) REFERENCES Album(albumID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS PlaylistSongs;
CREATE TABLE PlaylistSongs (
songID     INT NOT NULL,
playlistID INT NOT NULL,
CONSTRAINT playSong PRIMARY KEY (songID, playlistID),
FOREIGN KEY (playlistID) REFERENCES Playlist(playlistID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (songID) REFERENCES Song(songID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS UserLikes;
CREATE TABLE UserLikes (
username VARCHAR(50) NOT NULL,
songID   INT NOT NULL,
CONSTRAINT userLike PRIMARY KEY (username, songID),
FOREIGN KEY (username) REFERENCES SpotifyUser(username) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (songID) REFERENCES Song(songID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS UserFollow;
CREATE TABLE UserFollow (
username VARCHAR(50) NOT NULL,
artist   VARCHAR(50) NOT NULL,
CONSTRAINT userFollow PRIMARY KEY (username, artist),
FOREIGN KEY (username) REFERENCES SpotifyUser(username) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (artist) REFERENCES Artist(artistName) ON DELETE CASCADE ON UPDATE CASCADE
);